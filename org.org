#+TITLE: Introduction to org-mode
#+AUTHOR: Alan Xie
#+EMAIL: HongMain@163.com
#+DATE: 2017-03-05 Sun

* Notes of learning org-mode

  This is a brief tutorial on org-mode, I'll focus on literate programming, that's my favorite.

  Org is a mode for keeping notes, maintaining TODO lists, and project planning with a fast and effective plain-text system. It also is an authoring system with unique support for literate programming and reproducible research.


* Document structure

  When Emacs  rst visits an Org  le, the global state is set to OVERVIEW, i.e. only the top level headlines are visible. This can be con gured through the variable org-startup- folded, or on a per- le basis by adding a startup keyword overview, content, showall, like this:
  #+STARTUP: content

** Commands

*** Visiblity cycling

   - TAB :: Subtree cycling: Rotate current subtree among the states.
   - S-TAB and C-u TAB :: Global cycling: Rotate the entire buffer among the states.
   - C-u C-u C-u TAB :: Show all, including drawers.


*** Motion

    - C-c C-n :: Next heading.
    - C-c C-p :: Previous heading.
    - C-c C-f :: Next heading same level.
    - C-c C-b :: Previous heading same level.
    - C-c C-u :: Backward to higher level heading.


*** Structure editing

    - M-RET :: Insert new heading with same level as current.
    - M-S-RET :: Insert new TODO entry with same level as current heading.
    - TAB in new, empty entry :: 
	 In a new entry with no text yet, TAB will cycle through reasonable levels.
    - M-left/right :: Promote/demote current heading by one level.
    - M-S-left/right :: Promote/demote the current subtree by one level.
    - M-S-up/down :: Move subtree up/down (swap with previous/next sub tree of same level).
    - C-c C-w :: Refile entry or region to a different location.
    - C-x n s/w :: Narrow buffer to current subtree/widen it again.


*** Sparse trees

    - C-c / :: This prompts for an extra key to select a sparse-tree creating command.
    - C-c / r :: Occur. Prompts for a regexp and shows a sparse tree with all matches. Each match is also highlighted; the highlights disappear by pressing C-c C-c.


*** Plain lists

    Org knows ordered lists, unordered lists, and description lists.
    * Unordered list items start with '-', '+', or '*' as bullets.
    * Ordered list items start with '1.' or '1)'.
    * Description list use '::' to separate the term from the description.

    Commands:
    - TAB :: Items can be folded just like headline levels.
    - M-RET :: Insert new item at current level. With a prefix argument, force a new heading.
    - M-S-RET :: Insert a new item with a checkbox.
    - M-S-up/down :: Move the item including subitems up/down (swap with previous/next item of same indentation). If the list is ordered, renumbering is automatic.
    - M-left/right :: Decrease/increase the indentation of an item, leaving children alone.
    - M-S-left/right :: Decrease/increase the indentation of the item, including subitems.
    - C-c C-c :: If there is a checkbox in the item line, toggle the state of the checkbox. Also verify bullets and indentation consistency in the whole list.
    - C-c - :: Cycle the entire list level through the different itemize/enumerate bullets ('-', '+', '*', '1.', '1)').


*** Footnotes

    - C-c C-x f :: The footnote action command. When the cursor is on a footnote reference, jump to the definition. When it is at a definition, jump to the (first) reference. Otherwise, create a new footnote. [fn:1]
    - C-c C-c :: Jump between definition and reference.


* Tables

  | Name  | Phone | Age |
  |-------+-------+-----|
  |       |       |     |
  |       |       |     |
  | Anna  |  4321 |  25 |
  | Peter |  1234 |  17 |

** Commands

*** Creation and conversion

    - C-c | :: Convert the active region to table. If every line contains at least on TAB charater, the function assumes that the material is tab separated. If every line contains a comma, comma-separated values (CSV) are assumed. If not, lines are aplit at whitespace into fields.
	       If there is no active region, this command creates an empty Org table.


*** Re-aligning and field motion

    - C-c C-c :: Re-align the table without moving the cursor.
    - TAB :: Re-align the table, move to the next field. Creates a new row if necessary.
    - S-TAB :: Re-align, move to previous field.
    - RET :: Re-align the table and move down to next row. Creates a new row if necessary.


*** Column and row editing

    - M-left/right :: Move the current column left/right.
    - M-S-left :: Kill the current column.
    - M-S-right :: Insert a new column to the left of the cursor position.
    - M-up/down :: Move the current row up/down.
    - M-S-up :: Kill the current row or horizontal line.
    - M-S-down :: Insert a new row above the current row. With a prefix argument, the line is created below the current one.
    - C-c - :: Insert a horizontal line below current row. With a prefix argument, the line is created above the current line.
    - C-c RET :: Insert a horizontal line below current row, and move the cursor into the row below that line.
    - C-c ^ :: Sort the table lines in the region. The position of point indicates the column to be used for sorting, and the range of lines is the range between the nearest horizontal separator lines, or the entire table.


* Hyperlinks

** Format

   [ [link][description] ] or alternatively [ [link] ]


** Examples

   - #my-custom-id :: internale link, which will link to the entry with the CUSTOM_ID property 'my-custome-id'.
   - http://www.astro.uva.nl/~dominik :: on the web
   - file:/home/dominik/images/jupiter.jpg :: file, absolute path
   - /home/dominik/images/jupiter.jpg :: same as above
   - file:papers/last.pdf :: file, relative path
   - file:projects.org :: another Org file
   - docview:papers/last.pdf::NNN :: open file in doc-view mode at page NNN
   - id:B7423F4D-2E8A-471B-8810-C40F074717E9 :: Link to heading by ID
   - news:comp.emacs :: Usenet link
   - mailto:adent@galaxy.net :: Mail link
   - vm:folder :: VM folder link
   - vm:folder#id :: VM message link
   - wl:folder#id :: WANDERLUST message link
   - mhe:folder#id :: MH-E message link
   - rmail:folder#id :: RMAIL message link
   - gnus:group#id :: Gnus article link
   - bbdb:R.*Stallman :: BBDB link (with regexp)
   - irc:/irc.com/#emacs/bob :: IRC link
   - info:org:External%20links :: Info node link (with encoded space)


** Commands

   - C-c l :: Store a link to the current location. This is a global command (you must create the key binding yourself) which can be used in any buffer to create a link. The link will be stored for later insertion into an Org buffer.
   - C-c C-l :: Insert a link. This prompts for a link to be inserted into the buffer. You can just type a link, or use history keys up and down to access stored links. You will be prompted for the description part of the link. When called with a C-u prefix argument, file name completion is used to link to a file.
   - C-c C-l (with cursor on existing link) :: When the cursor is on an existing link, C-c C-l allows you to edit the link and description parts of the link.
   - C-c C-o or mouse-1 or mouse-2 :: Open link at point.
   - C-c & :: Jump back to a recorded position. A position is recorded by the commands following internal links, and by C-c %. Using this command several times in direct succession moves through a ring of previously recorded positions.


* TODO Items

  Any headline becomes a TODO item when it starts with the word 'TODO'.


** Commands

   - C-c C-t :: Rotate the TODO state of the current item among
		(unmarked) -> TODO -> DONE -> (unmarked)
   - S-right/left :: Select the following/preceding TODO state, similar to cycling.
   - C-c / t :: View TODO items in a sparse tree. Folds the buffer, but shows all TODO items and the headings hierarchy above them.
   - C-c a t :: Show the global TODO list. Collects the TODO items from all agenda files into a single buffer.
   - S-M-RET :: Insert a new TODO entry below the current one.


** Priorities

   - C-c , :: Set the priority of the current headline. Press 'A', 'B' or 'C' to select a priority, or SPC to remove the cookie.
   - S-up/down :: Increase/descrease priority of current headline.


** Breaking tasks down into subtasks

   It is often advisable to break down large tasks into smaller, manageable subtasks. You can do this by creating an outline tree below a TODO item, with detailed subtasks on the tree. To keep the overview over the fraction of subtasks that are already completed, insert either ‘[/]’ or ‘[%]’ anywhere in the headline. These cookies will be updated each time the TODO status of a child changes, or when pressing C-c C-c on the cookie.


** Checkboxes

   Every item in a plain list can be made into a checkbox by starting it with the string '[]'.

   - C-c C-c :: Toggle checkbox status or (with prefix arg) checkbox presence at point.
   - M-S-RET :: Insert a new item with a checkbox. This works only if the cursor is already in a plain list item.


* Tags

  Tags can simply be typed into the buffer at the end of a headline. After a colon, M-TAB offers completion on tags.


** Commands
   - C-c C-q :: Enter new tags for the current headline. Org mode will either offer completion or a special single-key interface for setting tags. After pressing RET, the tags will be inserted and aligned to org-tags-column.
   - C-c C-c :: When the cursor is in a headline, this does the same as C-c C-q.


* Literate Programming

  My favorite feature, as it allows you to include code snippets which can be evaluated. For instance, here is an example:

#+BEGIN_SRC emacs-lisp :dir /
  (directory-files ".")
#+END_SRC

#+RESULTS:
| . | .. | bin | boot | cdrom | core | dev | etc | home | initrd.img | initrd.img.old | lib | lib64 | lost+found | media | mnt | opt | proc | root | run | sbin | snap | srv | sys | tmp | usr | var | vmlinuz | vmlinuz.old |

  Type C-c C-c to execute the command and note the results, are inserted back into your file… we’ll use that to our advantage later.

  Type C-c ’ (apostrophe) to edit the block in the language’s mode. This allows you to gain benefit of paredit and whatnot.

#+NAME: Shell-Example
#+BEGIN_SRC sh
  uname
#+END_SRC

#+RESULTS: Shell-Example
: Linux

  If C-c C-c doesn’t work, you may have to pre-load the support: M-x load-library and then ob-sh

  The results from on code block can be used for another code block. For instantce, here is some Python code to generate "some" random numbers.

#+NAME: pythonic-numbers
#+BEGIN_SRC python :results list
import random
return [random.randrange(1, 20)
  for i in range(random.randrange(1, 20))]
#+END_SRC

#+RESULTS: pythonic-numbers
- 13
- 3
- 13
- 8
- 1

  How many items in the list? Use this Lisp function call to count them.

#+BEGIN_SRC emacs-lisp :var numbers=pythonic-numbers
  (length numbers)
#+END_SRC

#+RESULTS:
: 3

* Footnotes

[fn:1] When this command is called with a prefix argument, a menu of additional options including renumbering is offered.

